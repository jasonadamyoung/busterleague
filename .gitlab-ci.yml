.docker_stages: &docker_stages
  image: docker:stable
  services:
    - docker:18.09.7-dind
  before_script:
    - docker info
    - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
  after_script:
    - docker logout ${CI_REGISTRY}

# push strategy comes from: https://blog.callr.tech/building-docker-images-with-gitlab-ci-best-practices/
stages:
  - build
  - push
  - deploy

Build:
  <<: *docker_stages
  stage: build
  only:
    - production
    - development
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:production || true 
    - >
      docker build
      --pull
      --build-arg VCS_REF=${CI_COMMIT_SHA}
      --build-arg VCS_URL=${CI_PROJECT_URL}
      --cache-from ${CI_REGISTRY_IMAGE}:production
      --tag ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}
      --file cluster.dockerfile
      .
    - docker push ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}

Push production:
  <<: *docker_stages
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - production
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA} ${CI_REGISTRY_IMAGE}:production
    - docker push ${CI_REGISTRY_IMAGE}:production    

Push development:
  <<: *docker_stages
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - development
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA} ${CI_REGISTRY_IMAGE}:development
    - docker push ${CI_REGISTRY_IMAGE}:development    


Push tag:
  <<: *docker_stages
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - tags
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA}
    - docker tag ${CI_REGISTRY_IMAGE}:git-${CI_COMMIT_SHORT_SHA} ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}    

Deployment:
  stage: deploy
  image: gitlab.lrvlab.net:4567/busterleague/busterdeploy:latest
  before_script:
    - ansible --version
  script:
    - echo 'hello'
    